version: '3.3'

services:
  db_example_site:
    image: mysql:latest
    # makes database data persist - this is a NAMED volume (not path based)
    # and is handled invisibly by Docker
    # we generally don't need to sync local DB contents to vc...
    # but if we did we could make this path based: ./db_data
    volumes:
      - db_data_example_site:/var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: sleepingkiwi
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress_example_site:
    # links this service to the db we just started!
    depends_on:
      - db_example_site
    # latest WP version used whenever we run `docker-compose up`
    # can tie to a specific version if the project needs it
    # ref: https://hub.docker.com/_/wordpress/
    image: wordpress:latest
    # not used if we're connecting through our local proxy
    # ports:
      # - 443:443
      # - "8300:80"
    # maps the wp-content directory to our local file system using a PATH BASED volume
    # means we can add as much or as little of wp-content to vc as we want!
    volumes:
      - ./wp-content/:/var/www/html/wp-content
      # links to our local uploads.ini to control uploads etc.
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: db_example_site:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      # the FS_METHOD config let's us edit things without being asked for FTP credentials...
      # ALTERNATE_WP_CRON set to true stops cron failing locally. test with 'WP Crontrol' plugin
      WORDPRESS_CONFIG_EXTRA: define('FS_METHOD', 'direct'); define('ALTERNATE_WP_CRON', true);
      # we can check this in our php
      # https://developer.wordpress.org/reference/functions/wp_get_environment_type/
      WP_ENVIRONMENT_TYPE: local
      # tell our local dev proxy what the domain will be
      # this should also be set up in /etc/hosts
      VIRTUAL_HOST: example-site.local

  # start phpmyadmin - not needed but useful for making Database dumps etc.
  # can comment out if not required!
  phpmyadmin_example_site:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db_example_site
    # ports:
    #   - "8000:80"
    restart: unless-stopped
    environment:
      PMA_HOST: db_example_site
      VIRTUAL_HOST: db.example-site.local
      UPLOAD_LIMIT: 500M

volumes:
  db_data_example_site: {}

# get on our local dev network!
networks:
  default:
    external:
      name: nginx-proxy
